import { IUnit } from './interface/IUnit';
/**
 * Inspired by:
 * https://github.com/jalaali/moment-jalaali
 * Thanks to all contributors
 * https://github.com/jalaali
 */
export declare class Jalali {
    date: Date;
    constructor(date?: Date, includeMS?: boolean);
    private static _timeZone?;
    static readonly defaultTimeZone: string;
    static checkTimeZone: boolean;
    static setTimeZone: boolean;
    static set timeZone(value: string);
    static get timeZone(): string;
    static parse(stringValue: string, includeMS?: boolean): Jalali;
    static gregorian(stringValue: string, includeMS?: boolean): Jalali;
    static timestamp(value: number, includeMS?: boolean): Jalali;
    static now(includeMS?: boolean): Jalali;
    clone(includeMS?: boolean): Jalali;
    valueOf(): number;
    toString(): string;
    getFullYear(): number;
    getMonth(): number;
    getDate(): number;
    getHours(): number;
    getMinutes(): number;
    getSeconds(): number;
    getMilliseconds(): number;
    setFullYear(value: number): Jalali;
    setMonth(value: number): Jalali;
    setDate(value: number): Jalali;
    setHours(value: number): Jalali;
    setMinutes(value: number): Jalali;
    setSeconds(value: number): Jalali;
    setMilliseconds(value: number): Jalali;
    isLeapYear(): boolean;
    monthLength(): number;
    add(value: number, unit: IUnit): Jalali;
    startOf(unit: IUnit): Jalali;
    endOf(unit: IUnit): Jalali;
    dayOfYear(): number;
    dayOfYear(value: number): Jalali;
    format(format?: string, gregorian?: boolean): string;
    gregorian(format?: string): string;
    private update;
}
